<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1385.vb_58b_86ea_fff1">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>This pipeline job is used to deploy all the different rules and rule processors within one job</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3853.vb_a_490d892963">
    <script> pipeline {
   agent any
   stages {

    stage('rule-001') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-001'
            }
        }
    }
    stage('rule-002') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-002'
            }
        }
    }

    stage('rule-003') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-003'
            }
        }
    }
    
    stage('rule-004') {
         steps {
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                 build 'Deployments/Rules/rule-004'
             }
         }
    }

    stage('rule-006') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-006'
            }
        }
    }

    stage('rule-007') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-007'
            }
        }
    }

    stage('rule-008') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-008'
            }
        }
    }

    stage('rule-010') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-010'
            }
        }
    }

    stage('rule-011') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-011'
            }
        }
    }

    stage('rule-016') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-016'
            }
        }
    }

    stage('rule-017') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-017'
            }
        }
    }

    stage('rule-018') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-018'
            }
        }
    }

    stage('rule-020') {
        steps {
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                 build 'Deployments/Rules/rule-020'
             }
        }
    }

    stage('rule-021') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-021'
            }
        }
    }
    
    stage('rule-024') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-024'
            }
        }
    }

    stage('rule-025') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-025'
            }
        }
    }
    
    stage('rule-026') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-026'
            }
        }
    }

    stage('rule-027') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-027'
            }
        }
    }

    stage('rule-028') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-028'
            }
        }
    }

    stage('rule-030') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-030'
            }
        }
    }

    stage('rule-044') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-044'
            }
        }
    }

    stage('rule-045') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-045'
            }
        }
    }

    stage('rule-048') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-048'
            }
        }
    }

    stage('rule-054') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-054'
            }
        }
    }

    stage('rule-063') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-063'
            }
        }
    }

    stage('rule-074') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-074'
            }
        }
    }

    stage('rule-075') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-075'
            }
        }
    }

    stage('rule-076') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-076'
            }
        }
    }

    stage('rule-078') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-078'
            }
        }
    }

    stage('rule-083') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-083'
            }
        }
    }

    stage('rule-084') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-084'
            }
        }
    }

    stage('rule-090') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-090'
            }
        }
    }

    stage('rule-091') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rules/rule-091'
            }
        }
    }
            
    stage('CRSP') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rule Processors/channel-router-setup-processor'
            }
        }
    }
    
    stage('TMS') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rule Processors/tms-service'
            }
        }
    }
    
    stage('TADP') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rule Processors/transaction-aggregation-decisioning-processor'
            }
        }
    }
    
    stage('TP') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rule Processors/typology-processor'
            }
        }
    }
    
    stage('sidecar') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rule Processors/event-sidecar'
            }
        }
    }
    
    stage('lumberjack') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rule Processors/lumberjack'
            }
        }
    }
    stage('nats-utilities') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                build 'Deployments/Rule Processors/nats-utilities'
            }
        }
    }
   }
 }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>