<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1385.vb_58b_86ea_fff1">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>This pipeline job is used to deploy all the different rules and rule processors within one job</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3853.vb_a_490d892963">
    <script>pipeline {
    agent any
    stages {
        stage('Concurrent Stages') {
            steps {
                script {
                    parallel(
                        rule_001: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-001'
                            }
                        },
                        rule_002: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-002'
                            }
                        },
                        rule_003: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-003'
                            }
                        },
                        rule_004: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-004'
                            }
                        },
                        rule_006: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-006'
                            }
                        },
                        rule_007: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-007'
                            }
                        },
                        rule_008: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-008'
                            }
                        },
                        rule_010: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-010'
                            }
                        },
                        rule_011: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-011'
                            }
                        },
                        rule_016: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-016'
                            }
                        },
                        rule_017: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-017'
                            }
                        },
                        rule_018: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-018'
                            }
                        },
                        rule_020: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-020'
                            }
                        },
                        rule_021: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-021'
                            }
                        },
                        rule_024: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-024'
                            }
                        },
                        rule_025: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-025'
                            }
                        },
                        rule_026: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-026'
                            }
                        },
                        rule_027: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-027'
                            }
                        },
                        rule_028: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-028'
                            }
                        },
                        rule_030: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-030'
                            }
                        },
                        rule_044: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-044'
                            }
                        },
                        rule_045: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-045'
                            }
                        },
                        rule_048: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-048'
                            }
                        },
                        rule_054: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-054'
                            }
                        },
                        rule_063: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-063'
                            }
                        },
                        rule_074: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-074'
                            }
                        },
                        rule_075: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-075'
                            }
                        },
                        rule_076: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-076'
                            }
                        },
                        rule_078: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-078'
                            }
                        },
                        rule_083: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-083'
                            }
                        },
                        rule_084: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-084'
                            }
                        },
                        rule_090: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-090'
                            }
                        },
                        rule_091: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rules/rule-091'
                            }
                        },
                        CRSP: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rule Processors/channel-router-setup-processor'
                            }
                        },
                        TMS: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rule Processors/tms-service'
                            }
                        },
                        TADP: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rule Processors/transaction-aggregation-decisioning-processor'
                            }
                        },
                        TP: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rule Processors/typology-processor'
                            }
                        },
                        sidecar: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rule Processors/event-sidecar'
                            }
                        },
                        lumberjack: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rule Processors/lumberjack'
                            }
                        },
                        natsutilities: {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                build 'Deployments/Rule Processors/nats-utilities'
                            }
                        }
                    )
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>