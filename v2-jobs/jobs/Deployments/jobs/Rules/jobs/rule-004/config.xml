<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@5.2.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/$Repository/rule-executer/</url>
        <credentialsId>Github</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/$Branch</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <assignedNode>jenkins-agent</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe
# Replace content in Dockerfile
sed -i &quot;s|ENV QUOTING=false|ENV QUOTING=${EnableQuoting}|g&quot; Dockerfile
sed -i &quot;s|ENV CACHE_TTL=300|ENV CACHE_TTL=${CacheTTL}|g&quot; Dockerfile
sed -i &quot;s|ENV APM_SECRET_TOKEN=|ENV APM_SECRET_TOKEN=${APMToken}|g&quot; Dockerfile
sed -i &apos;s|ENV PRODUCER_STREAM=|ENV PRODUCER_STREAM=RuleResponse004|g&apos; Dockerfile
sed -i &apos;s|ENV CONSUMER_STREAM=|ENV CONSUMER_STREAM=RuleRequest004|g&apos; Dockerfile
sed -i &apos;s|ENV STREAM_SUBJECT=|ENV STREAM_SUBJECT=RuleRequest004|g&apos; Dockerfile
sed -i &quot;s|ENV SERVER_URL=0.0.0.0:4222|ENV SERVER_URL=${NATS_SERVER_URL}|g&quot; Dockerfile
sed -i &quot;s|ENV STARTUP_TYPE=nats|ENV STARTUP_TYPE=${NATS_SERVER_TYPE}|g&quot; Dockerfile
sed -i &quot;s|ENV REDIS_SERVERS=|ENV REDIS_SERVERS=${RedisServers}|g&quot; Dockerfile
sed -i &quot;s|ENV REDIS_AUTH=|ENV REDIS_AUTH=${RedisPassword}|g&quot; Dockerfile
sed -i &quot;s|ENV REDIS_IS_CLUSTER=|ENV REDIS_IS_CLUSTER=${RedisCluster}|g&quot; Dockerfile
sed -i &quot;s|ENV PSEUDONYMS_DATABASE_URL=|ENV PSEUDONYMS_DATABASE_URL=${ArangoPseudonymsURL}|g&quot; Dockerfile
sed -i &quot;s|ENV PSEUDONYMS_DATABASE_PASSWORD=|ENV PSEUDONYMS_DATABASE_PASSWORD=${ArangoPseudonymsPassword}|g&quot; Dockerfile
sed -i &quot;s|ENV TRANSACTION_HISTORY_DATABASE_URL=|ENV TRANSACTION_HISTORY_DATABASE_URL=${ArangoTransactionHistoryURL}|g&quot; Dockerfile
sed -i &quot;s|ENV TRANSACTION_HISTORY_DATABASE_PASSWORD=|ENV TRANSACTION_HISTORY_DATABASE_PASSWORD=${ArangoTransactionHistoryPassword}|g&quot; Dockerfile
sed -i &quot;s|ENV CONFIG_DATABASE_URL=|ENV CONFIG_DATABASE_URL=${ArangoConfigurationURL}|g&quot; Dockerfile
sed -i &quot;s|ENV CONFIG_DATABASE_PASSWORD=|ENV CONFIG_DATABASE_PASSWORD=${ArangoConfigurationPassword}|g&quot; Dockerfile
sed -i &quot;s|ENV LOGSTASH_LEVEL=&apos;info&apos;|ENV LOGSTASH_LEVEL=${LogLevel}|g&quot; Dockerfile
sed -i &quot;s|ENV APM_ACTIVE=true|ENV APM_ACTIVE=${APMActive}|g&quot; Dockerfile
sed -i &apos;s|RULE_NAME=&quot;901&quot;|RULE_NAME=&quot;004&quot;|g&apos; Dockerfile
sed -i &apos;s|FUNCTION_NAME=&quot;rule-executer&quot;|FUNCTION_NAME=&quot;rule-004&quot;|g&apos; Dockerfile
sed -i &apos;s|rule-executer-rel-1-0-0|rule-004-rel-1-0-0|g&apos; Dockerfile
sed -i &apos;s|rule-executer-rel-1-0-0|rule-004-rel-1-0-0|g&apos; deployment.yaml
sed -i &apos;s|rule-executer|rule-004|g&apos; deployment.yaml
sed -i &quot;s|example.io|${ImageRepository}|g&quot; deployment.yaml
sed -i &quot;s|rule-000-sidecar|rule-004-sidecar|g&quot; deployment.yaml
sed -i &quot;s|${ImageRepository}/rule-004-rel-1-0-0|${ImageRepository}/rule-004-rel-1-0-0-${envName}|g&quot; deployment.yaml
sed -i &apos;s|rule-executer-rel-1-0-0|rule-004-rel-1-0-0|g&apos; service.yaml
sed -i &apos;s|rule-executer|rule-004|g&apos; service.yaml
sed -i &quot;s/\${GH_TOKEN}/${READ_GH_TOKEN}/g&quot; .npmrc
sed -i &apos;s|RUN npm ci --omit=dev --ignore-scripts|RUN npm ci --omit=dev --ignore-scripts\nRUN npm uninstall rule\nRUN npm i rule@npm:@frmscoe/rule-004@latest|g&apos; Dockerfile
# Login to container registry
echo $REG_PASS | buildah login --username $REG_USER --password-stdin ${ImageRepository}
# Build Docker Image
buildah bud --format docker --ulimit nofile=4096:4096 -t ${ImageRepository}/rule-004-rel-1-0-0-${envName}:1.0.0 .
# Push Docker Image to Container Registry
buildah push ${ImageRepository}/rule-004-rel-1-0-0-${envName}:1.0.0
# Apply newly built image to a kubernetes pod
kubectl apply -f deployment.yaml
# Rollout restart the deployment to take effect
kubectl rollout restart deployment rule-004-rel-1-0-0 -n processor
# Apply the service configuration
kubectl apply -f service.yaml</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@642.v737c34dea_6c2">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>ContainerRegistry</credentialsId>
          <usernameVariable>REG_USER</usernameVariable>
          <passwordVariable>REG_PASS</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>githubReadPackage</credentialsId>
          <variable>READ_GH_TOKEN</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <org.csanchez.jenkins.plugins.kubernetes.KubectlBuildWrapper plugin="kubernetes@4147.va_d406fb_66172">
      <serverUrl>https://E2D6FC74387DB5078991F3AF86082D22.yl4.af-south-1.eks.amazonaws.com</serverUrl>
      <credentialsId>kubernetespro</credentialsId>
    </org.csanchez.jenkins.plugins.kubernetes.KubectlBuildWrapper>
  </buildWrappers>
</project>